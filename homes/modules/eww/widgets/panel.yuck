(defwindow panel-win :monitor 0
  :geometry (geometry :width '15%' :anchor 'right top')
  :stacking 'fg'
  :exclusive false
  :focusable false
  (panel))

(defwidget panel []
  (eventbox :onhoverlost "eww close panel-win"
    (box :class 'bg b-fg br-1 mx-1 my-8 p-2'  :orientation 'v' :space-evenly false
      (power-panel)
      (options-panel)
      (metrics-panel))))

(defwidget metrics-panel []
  (box :class 'py-1' :orientation 'v' :space-evenly false
    (box :class 'px-2' :orientation 'v'
      (box :space-evenly false
        (battery-label :class 'font-6 color-2 px-4')
        (scale :value '${EWW_BATTERY["BAT0"].capacity}' :hexpand true))
      (box :space-evenly false
        (scale :value '${brightness-listen}' :onchange 'brightnessctl set {}%' :hexpand true)
        (brightness-label :class 'font-6 color-5 px-4' :brightness brightness-listen)))
    (box
      (overlay
        (label :class 'font-8 color-9 p-5' :xalign 0.35 :text "")
        (circular-progress :class 'bg-9'
          :start-at 25
          :thickness 8
          :value '${EWW_CPU["avg"]}'))
      (overlay
        (label :class 'font-8 color-11 p-5' :xalign 0.35  :text "")
        (circular-progress :class 'bg-11'
          :start-at 25
          :thickness 8
          :value '${EWW_RAM["used_mem_perc"]}'))
      (overlay
        (label :class 'font-8 color-13 p-5' :text "󰋊")
        (circular-progress :class 'bg-13'
          :start-at 25
          :thickness 8
          :value '${EWW_DISK["/"]["used_perc"]}')))))

(defvar wifi-reveal false)
(defvar sink-reveal false)
(defvar source-reveal false)
(defvar bluetooth-reveal false)
(defwidget options-panel []
  (box :class 'py-1' :orientation 'v' :space-evenly false
    (box
      (eventbox :class 'px-1'
        :onhover 'eww update wifi-reveal=true sink-reveal=false source-reveal=false  bluetooth-reveal=false'
        (label :class 'br-1 p-2 mx-1 color-0 ${wifi-reveal ? "bg-14" : "bg-6"}' :xalign 0.45 :text '󰖩'))
      (eventbox :class 'px-1'
        :onhover 'eww update wifi-reveal=false sink-reveal=true source-reveal=false bluetooth-reveal=false'
        (label :class 'br-1 p-2 mx-1 color-0 ${sink-reveal ? "bg-12" : "bg-4"}' :text '󰕾'))
      (eventbox :class 'px-1'
        :onhover 'eww update wifi-reveal=false sink-reveal=false source-reveal=true bluetooth-reveal=false'
        (label :class 'br-1 p-2 mx-1 color-0 ${source-reveal ? "bg-11" : "bg-3"}' :text '󰍬'))
      (eventbox :class 'px-1'
        :onhover 'eww update wifi-reveal=false sink-reveal=false source-reveal=false bluetooth-reveal=true'
        (button :onclick 'scripts/expect-scan.ex'
          :timeout '10s'
          (label :class 'br-1 p-2 mx-1 color-0 ${bluetooth-reveal ? "bg-9" : "bg-1"}' :text ''))))
    (box :class 'py-1' :visible '${wifi-reveal || sink-reveal || source-reveal || bluetooth-reveal}'
      (wifi-reveal)
      (sink-reveal)
      (source-reveal)
      (bluetooth-reveal))))

(defwidget wifi-reveal []
  (revealer :transition 'slidedown' :reveal wifi-reveal :visible wifi-reveal
    (eventbox :onhoverlost 'eww update wifi-reveal=false'
      (box :orientation 'v'
        (for con in wifi-poll
          (button :onclick 'nmcli device wifi connect ${con.ssid}'
            (box
              (label :halign 'start' :text '${con.ssid}')
              (box
                (label :text '${con.active == "yes" ? "󰀂" : ""}')
                (scale :value '${con.signal}')))))))))

(defwidget sink-reveal []
  (revealer :transition 'slidedown' :reveal sink-reveal :visible sink-reveal
    (eventbox :onhoverlost 'eww update sink-reveal=false'
      (box :orientation 'v'
        (for sink in sink-listen
          (box
            (button :halign 'start' :onclick 'pactl set-default-sink ${sink.id}'
              (label :text '${sink.name}'))
            (box
              (button :onclick 'pactl set-sink-mute ${sink.id} toggle'
                (box
                  (label :text '${sink.mute ? "" : ""}')
                  (label :text '${sink.default ? "󱡬" : ""}')))
              (scale :value '${replace(sink.volume, "%", "")}'
                :onchange 'pactl set-sink-volume ${sink.id} {}%'))))))))

(defwidget source-reveal []
  (revealer :transition 'slidedown' :reveal source-reveal :visible source-reveal
    (eventbox :onhoverlost 'eww update source-reveal=false'
      (box :orientation 'v'
        (for source in source-listen
          (box
            (button :onclick 'pactl set-default-source ${source.id}'
              (label :halign 'start' :text '${source.name}'))
            (box
              (button :onclick 'pactl set-source-mute ${source.id} toggle'
                (box
                  (label :text '${source.mute ? "󰍭" : ""}')
                  (label :text '${source.default ? "󱡬" : ""}')))
              (scale :value '${replace(source.volume, "%", "") ?: 0}'
                :onchange 'pactl set-source-volume ${source.id} {}%'))))))))

(defwidget bluetooth-reveal []
  (revealer :transition 'slidedown' :reveal bluetooth-reveal :visible bluetooth-reveal
    (eventbox :onhoverlost 'eww update bluetooth-reveal=false'
      (box :orientation 'v'
        (for dev in bluetooth-poll
          (button :onclick 'scripts/expect-bluetooth.ex ${dev.mac}' :timeout '60s'
            (box
              (label :halign 'start' :text '${dev.name}')
              (box
                (label :text '${dev.connected ? "󰂱" : ""}')
                (scale :value '${dev.battery}')))))))))

(defvar shutdown-hover false)
(defvar reboot-hover false)
(defvar suspend-hover false)
(defvar lock-hover false)
(defwidget power-panel []
  (box
    (eventbox
      :onhover "eww update shutdown-hover=true"
      :onhoverlost "eww update shutdown-hover=false"
      (button :onclick 'shutdown now'
        (label :class 'br-1 p-2 mx-1 color-0 ${shutdown-hover ? "bg-9" : "bg-1"}'  :text '󰤆')))
    (eventbox
      :onhover "eww update reboot-hover=true"
      :onhoverlost "eww update reboot-hover=false"
      (button :onclick 'reboot' :class 'box'
        (label :class 'br-1 p-2 mx-1 color-0 ${reboot-hover ? "bg-11" : "bg-3"}' :text '󰑖')))
    (eventbox
      :onhover "eww update suspend-hover=true"
      :onhoverlost "eww update suspend-hover=false"
      (button :onclick 'systemctl suspend' :class 'box'
        (label :class 'br-1 p-2 mx-1 color-0 ${suspend-hover ? "bg-12" : "bg-4"}' :text '󰤄')))
    (eventbox
      :onhover "eww update lock-hover=true"
      :onhoverlost "eww update lock-hover=false"
      (button :onclick 'hyprlock && sleep 1' :class 'box'
        (label :class 'br-1 p-2 mx-1 color-0 ${lock-hover ? "bg-14" : "bg-6"}' :text '󰌾')))))
