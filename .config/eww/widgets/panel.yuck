(defwindow panel :monitor 0
  :geometry (geometry :width '12.5%' :anchor 'right top')
  :stacking 'fg'
  :exclusive false
  :focusable false
  :namespace 'eww'
  (panel))

(defwidget panel []
  (eventbox :onhoverlost "eww close panel"
    (box :style 'margin: 4px' :orientation 'v' :space-evenly false :spacing 4
      (panel-power)
      (panel-options))))

(defvar shutdown-hover false)
(defvar reboot-hover false)
(defvar suspend-hover false)
(defvar lock-hover false)
(defwidget panel-power []
  (box :spacing 4
    (eventbox :onhover "eww update shutdown-hover=true"
      :onhoverlost "eww update shutdown-hover=false"
      (button :onclick 'shutdown now'
        (label :class 'p-2 font-6 color-0  ${shutdown-hover ? "bg-11" : "bg-3"}' :xalign 0.475  :text '󰤆')))
    (eventbox :onhover "eww update reboot-hover=true"
      :onhoverlost "eww update reboot-hover=false"
      (button :onclick 'reboot'
        (label :class 'p-2 font-6 color-0 ${reboot-hover ? "bg-12" : "bg-4"}' :xalign 0.475 :text '󰑓')))
    (eventbox :onhover "eww update suspend-hover=true"
      :onhoverlost "eww update suspend-hover=false"
      (button :onclick 'playerctl -a pause & systemctl suspend'
        (label :class 'p-2 font-6 color-0 ${suspend-hover ? "bg-13" : "bg-5"}' :text '󰤄')))
    (eventbox :onhover "eww update lock-hover=true"
      :onhoverlost "eww update lock-hover=false"
      (button :onclick 'playerctl -a pause & hyprlock && sleep 1'
        (label :class 'p-2 font-6 color-0 ${lock-hover ? "bg-14" : "bg-6"}' :text '󰌾')))))

(defvar wifi-reveal false)
(defvar sink-reveal false)
(defvar source-reveal false)
(defvar bluetooth-reveal false)
(defwidget panel-options []
  (box :orientation 'v' :space-evenly false
    (box :spacing 4
      (eventbox :onhover 'eww update wifi-reveal=true sink-reveal=false source-reveal=false  bluetooth-reveal=false'
        (wifi-label :class 'p-2 font-6 color-0 ${wifi-reveal ? "bg-11" : "bg-3"}' :xalign 0.375))
      (eventbox :onhover 'eww update wifi-reveal=false sink-reveal=false source-reveal=false bluetooth-reveal=true'
        (button :onclick 'scripts/expect-scan.tcl' :timeout '10s'
          (bluetooth-label :class 'p-2 font-6 color-0 ${bluetooth-reveal ? "bg-12" : "bg-4"}' :xalign 0.45)))
      (eventbox :onhover 'eww update wifi-reveal=false sink-reveal=true source-reveal=false bluetooth-reveal=false'
        (button :onclick 'pactl set-sink-mute @DEFAULT_SINK@ toggle'
          (speakers-label :class 'p-2 font-6 color-0 ${sink-reveal ? "bg-13" : "bg-5"}' :xalign 0.45)))
      (eventbox :onhover 'eww update wifi-reveal=false sink-reveal=false source-reveal=true bluetooth-reveal=false'
        (button :onclick 'pactl set-source-mute @DEFAULT_SOURCE@ toggle'
          (mic-label :class 'p-2 font-6 color-0 ${source-reveal ? "bg-14" : "bg-6"}' :xalign 0.475))))
    (wifi-reveal)
    (sink-reveal)
    (source-reveal)
    (bluetooth-reveal)))

(defwidget wifi-reveal []
  (revealer :transition 'slidedown' :reveal wifi-reveal :visible wifi-reveal
    (eventbox :onhoverlost 'eww update wifi-reveal=false'
      (box :orientation 'v'
        (for con in wifi-poll
          (button :onclick 'nmcli device wifi connect ${con.ssid}'
            (box
              (label :class 'color-0' :halign 'start' :text '${con.ssid}')
              (box
                (label :class 'color-0' :text '${con.active == "yes" ? "󰀂" : ""}')
                (scale :value '${con.signal}')))))))))

(defwidget bluetooth-reveal []
  (revealer :transition 'slidedown' :reveal bluetooth-reveal :visible bluetooth-reveal
    (eventbox :onhoverlost 'eww update bluetooth-reveal=false'
      (box :orientation 'v'
        (for dev in bluetooth-poll
          (button :onclick 'scripts/expect-bluetooth.tcl ${dev.mac}' :timeout '60s'
            (box
              (label :class 'color-0' :halign 'start' :text '${dev.name}')
              (box
                (label :class 'color-0' :text '${dev.connected ? "󰂱" : ""}')
                (scale :value '${dev.battery}')))))))))

(defwidget sink-reveal []
  (revealer :transition 'slidedown' :reveal sink-reveal :visible sink-reveal
    (eventbox :onhoverlost 'eww update sink-reveal=false'
      (box :orientation 'v'
        (for sink in sink-listen
          (box
            (button :halign 'start' :onclick 'pactl set-default-sink ${sink.id}'
              (label :class 'color-0' :text '${sink.name}'))
            (box
              (button :onclick 'pactl set-sink-mute ${sink.id} toggle'
                (box
                  (label :class 'color-0' :text '${sink.mute ? "" : ""}')
                  (label :class 'color-0' :text '${sink.default ? "󱡬" : ""}')))
              (scale :value '${replace(sink.volume, "%", "")}'
                :onchange 'pactl set-sink-volume ${sink.id} {}%'))))))))

(defwidget source-reveal []
  (revealer :transition 'slidedown' :reveal source-reveal :visible source-reveal
    (eventbox :onhoverlost 'eww update source-reveal=false'
      (box :orientation 'v'
        (for source in source-listen
          (box
            (button :onclick 'pactl set-default-source ${source.id}'
              (label :class 'color-0' :halign 'start' :text '${source.name}'))
            (box
              (button :onclick 'pactl set-source-mute ${source.id} toggle'
                (box
                  (label :class 'color-0' :text '${source.mute ? "󰍭" : ""}')
                  (label :class 'color-0' :text '${source.default ? "󱡬" : ""}')))
              (scale :value '${replace(source.volume, "%", "") ?: 0}'
                :onchange 'pactl set-source-volume ${source.id} {}%'))))))))
