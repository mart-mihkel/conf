; eww config

; ━━━━ windows ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defwindow bar-win :monitor 0
  :geometry (geometry :y "-9px" :width "100%" :anchor "center top")
  :stacking "fg" 
  :exclusive false
  :focusable false
  (bar-expander))

(defwindow power-win :monitor 0
  :geometry (geometry :anchor "right center")
  :stacking "fg" 
  :exclusive false
  :focusable false
  (powermenu))

; ━━━━ bars ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defvar show-bar false)

(defwidget bar-expander []
  (transform :translate-y "-1px"
    (eventbox
      :onhover "eww update show-bar=true"
      :onhoverlost "eww update show-bar=false"
      (expander :expanded "${show-bar}"
        (bar)))))

(defwidget bar [] 
  (box :class "bar"
    (box :halign "start"
      (workspaces))
    (box :halign "center"
      (time))
    (box :halign "end"
      (tray)
      (wifi)
      ;(mic)
      (speakers)
      (battery)
      ;(date)
      ;(time)
      (power))))

; ━━━━ workspaces ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(deflisten workspaces :initial "[]" "./modules/listen-workspaces.sh")
(deflisten active-wsp :initlal "1" "./modules/listen-active.sh")

(defwidget workspaces []
  (box :orientation "h" :class "workspaces"
    (label :text "${active-wsp}" :visible false) ; initialize
    (for wsp in {workspaces}
      (button :class "workspace"
        :onclick "hyprctl dispatch workspace ${wsp.id}"
        (box
          (label :class "icon" :text "${wsp.id == active-wsp ? '' : ''}"))))))

; ━━━━ tray ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defwidget tray []
  (box :class "tray"
    (systray)))

; ━━━━ wifi ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defpoll wifi :initial "0" :interval "1m" "./modules/wifi.sh")

(defwidget wifi []
  (tooltip
    (label :class "tooltip" :text "${wifi == 0 ? 'Disconnected' : wifi}")
    (box :class "wifi"
      (label 
        :class "icon ${wifi == 0 ? 'disconnected' : 'connected'}"
        :text "${wifi == 0 ? '󰖪' : '󱚽' }"))))

; ━━━━ mic ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(deflisten mic :initial 0  "./modules/listen-mic.sh")

(defwidget mic []
  (box :class "mic"
    (button :class "mute-toggle"
            :onclick "pactl set-source-mute @DEFAULT_SOURCE@ toggle"
      ; 0: muted, 1: unmuted, 2: running
      (label :class "icon single-icon ${mic == 2 ? 'running' : mic == 0 ? 'muted' : ''}"
             :text "${mic == 0 ? '󰍭' :  '󰍬' }"))))

; ━━━━ volume ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(deflisten speakers :initial '{ "volume": 0, "muted": "false" }' "./modules/listen-volume.sh")

(defwidget speakers []
  (tooltip 
    (label :class "tooltip" :text "${ speakers.volume }%")
    (box :class "speakers"
      :space-evenly false
      (button :class "icon ${ speakers.volume > 100 ? 'over' : '' } ${ speakers.muted ? 'muted' : '' }"
        :onclick "pactl set-sink-mute @DEFAULT_SINK@ toggle"  
        (label :text "${  speakers.muted ? '󰖁' 
                        : speakers.volume > 70 ? '󰕾'
                        : speakers.volume > 35 ? '󰖀'
                        :  '󰕿' }")))))
    ;(scale 
    ;  :class "${ speakers.volume > 100 ? 'over' : '' }"
    ;  :min 0  
    ;  :max 100 
    ;  :value "${speakers.volume}" 
    ;  :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%")

; ━━━━ battery ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defwidget battery []
  (tooltip
    (label :class "tooltip" :text "${ EWW_BATTERY["BAT0"].capacity }%")
    (box :class "battery"
      :space-evenly false
      (label :class "icon ${ EWW_BATTERY["BAT0"].capacity <= 10 ? 'critical' : '' }"
             :text "${  EWW_BATTERY["BAT0"].capacity > 95 ? '󰁹' 
                      : EWW_BATTERY["BAT0"].capacity > 90 ? '󰂂' 
                      : EWW_BATTERY["BAT0"].capacity > 80 ? '󰂁' 
                      : EWW_BATTERY["BAT0"].capacity > 70 ? '󰂀' 
                      : EWW_BATTERY["BAT0"].capacity > 60 ? '󰁿' 
                      : EWW_BATTERY["BAT0"].capacity > 50 ? '󰁾' 
                      : EWW_BATTERY["BAT0"].capacity > 40 ? '󰁽' 
                      : EWW_BATTERY["BAT0"].capacity > 30 ? '󰁼' 
                      : EWW_BATTERY["BAT0"].capacity > 20 ? '󰁻' 
                      : EWW_BATTERY["BAT0"].capacity > 10 ? '󰁺' 
                      : '󰂃' }"))))
      ;(scale 
      ;  :class "${  EWW_BATTERY["BAT0"].capacity > 10 ? '' : 'critical' }"
      ;  :min 0  
      ;  :max 100 
      ;  :value "${ EWW_BATTERY["BAT0"].capacity }")

; ━━━━ date ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defpoll date-poll :interval "1m" "date +%d-%m")

(defwidget date []
  (tooltip 
    (calendar :class "tooltip"
      :show-details false
      :show-heading false)
    (box :class "date"
      :space-evenly false
      (label :class "icon" :text "󰃶")
      (label :text date-poll))))

; ━━━━ time ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defpoll time-poll :interval "1s" "date +'%b %-d %H:%M'")

(defwidget time []
  (tooltip 
    (calendar :class "tooltip"
      :show-details false
      :show-heading false)
    (box :class "time"
      :space-evenly false
      ;(label :class "icon" :text "󰥔")
      (label :text time-poll))))

; ━━━━ power ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defwidget power []
  (box :class "power"
    (button :onclick "eww close power-win || eww open power-win"
      (label :class "icon" :text ""))))

(defwidget powermenu []
  (box :class "powermenu"
    :orientation "v"
    (shutdown)
    (reboot)
    (suspend)
    (lock)
    (close)))

; ━━━━ shutdown  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

(defvar shutdown false)

(defwidget shutdown []
  (eventbox :class "shutdown ${shutdown ? 'hover' : ''}"
    :onhover "eww update shutdown=true"
    :onhoverlost "eww update shutdown=false"
    :onclick "shutdown now"
      (label :class "icon" :text "󰤆")))

; ━━━━ reboot  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

(defvar reboot false)

(defwidget reboot []
  (eventbox :class "reboot ${reboot ? 'hover' : ''}"
    :onhover "eww update reboot=true"
    :onhoverlost "eww update reboot=false"
    :onclick "reboot"
      (label :class "icon" :text "󰑖")))

; ━━━━ suspend  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

(defvar suspend false)

(defwidget suspend []
  (eventbox :class "suspend ${suspend ? 'hover' : ''}"
    :onhover "eww update suspend=true"
    :onhoverlost "eww update suspend=false"
    :onclick "eww close power-win && systemctl suspend"
      (label :class "icon" :text "󰤄")))

; ━━━━ lock  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

(defvar lock false)

(defwidget lock []
  (eventbox :class "lock ${lock ? 'hover' : ''}"
    :onhover "eww update lock=true"
    :onhoverlost "eww update lock=false"
    :onclick "eww close power-win && hyprlock && sleep 1"
      (label :class "icon" :text "󰌾")))

; ━━━━ close  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

(defvar close false)

(defwidget close []
  (eventbox :class "close ${close ? 'hover' : ''}"
    :onhover "eww update close=true"
    :onhoverlost "eww update close=false"
    :onclick "eww close power-win"
      (label :class "icon" :text "")))

